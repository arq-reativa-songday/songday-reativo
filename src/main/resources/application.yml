spring:
  data:
    mongodb:
      database: songday
      uri: mongodb://localhost:27017
    redis:
      url: redis://127.0.0.1:6379
  main:
    allow-bean-definition-overriding: 'true'
    web-application-type: 'reactive'
  cloud:
    loadbalancer:
      ribbon:
        enabled: 'false'
    function:
      definition: retrievePosts;printErrorsSongDay;createPost;postsSongExists;printCreatedPost;likePost;unlikePost
    stream:
      bindings:
        retrievePosts-in-0:
          destination: getposts
        retrievePosts-out-0:
          destination: posts
        printErrorsSongDay-in-0:
          destination: errorssongday
        createPost-in-0:
          destination: createpost
        createPost-out-0:
          destination: verifypostssong
        postsSongExists-in-0:
          destination: postssongexists
        postsSongExists-out-0:
          destination: postcreated
        printCreatedPost-in-0:
          destination: postcreated
        likePost-in-0:
          destination: likepost
        unlikePost-in-0:
          destination: unlikepost
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
    connection-timeout: 5s
  application:
    name: event-driven-songday
  profiles:
    active: dev
  config:
    import: optional:configserver:http://localhost:8888

server:
  port: 8065

api:
  cached: 'false'
  cache:
    local: 'false'